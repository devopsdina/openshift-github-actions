name: remove-kubeadmin-user

on:
  workflow_dispatch:
    inputs:
      ocpAPI:
        description: 'OpenShift API endpoint (eg. https://api.ocp-15.sandbox1900.opentlc.com:6443)'
        required: true
      s3_storage:
        description: 'AWS S3 storage bucket name (i.e. ocp-s3-storage)'
        required: true
      region:
        description: 'aws region'
        required: true

jobs:
  remove-kubeadmin-user:
    runs-on: macos-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Install OpenShift CLI
        uses: redhat-actions/oc-installer@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "${{ github.event.inputs.region }}"

      - name: Get S3 bucket
        shell: bash
        run: |
          clusterConfigName=$(echo ${{ github.event.inputs.ocpAPI }} | cut -d '.' -f 2-2)
          mkdir -p ./${{ env.temp_dir }}
          echo "Downloading $clusterConfigName metadata files from S3..."
          aws s3 sync s3://${{ github.event.inputs.s3_storage }}/$clusterConfigName ./${{ env.temp_dir }} --region ${{ github.event.inputs.region }}
          kubeadmin_pw=$(<./${{ env.temp_dir }}/auth/kubeadmin-password) >> $GITHUB_ENV

      - name: Authenticate with OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ github.event.inputs.ocpAPI }}
          openshift_username: kubeadmin
          openshift_password: $kubeadmin_pw
          insecure_skip_tls_verify: true

      - name: Use htpasswd as oauth, add OC_USER as cluster admin and removing kubeadmin user
        shell: bash
        run: |
          htpasswd -c -B -b users.htpasswd ${{ secrets.OC_USER }} ${{ secrets.OC_PASSWORD }}
          oc create secret generic htpass-secret --from-file=htpasswd=./users.htpasswd> -n openshift-config
          oc apply -f ./crd/htpasswd-oauth.yml
          oc create clusterrolebinding registry-controller --clusterrole=cluster-admin --user=${{ secrets.OC_USER }}
          oc adm policy add-cluster-role-to-user cluster-admin ${{ secrets.OC_USER }}
          oc delete secrets kubeadmin -n kube-system